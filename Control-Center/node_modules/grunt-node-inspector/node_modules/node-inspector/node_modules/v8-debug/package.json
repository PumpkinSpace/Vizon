{
  "name": "v8-debug",
  "version": "0.4.6",
  "description": "v8 debugger extending API",
  "homepage": "http://github.com/node-inspector/v8-debug",
  "author": {
    "name": "3y3 Ghoti",
    "email": "3y3@bk.ru"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/node-inspector/v8-debug.git"
  },
  "license": {
    "name": "BSD",
    "url": "https://github.com/node-inspector/v8-debug/blob/master/LICENSE"
  },
  "binary": {
    "module_name": "debug",
    "module_path": "./build/{module_name}/v{version}/{node_abi}-{platform}-{arch}/",
    "remote_path": "./{module_name}/v{version}/",
    "package_name": "{node_abi}-{platform}-{arch}.tar.gz",
    "host": "https://node-inspector.s3.amazonaws.com/"
  },
  "keywords": [
    "v8",
    "debugger"
  ],
  "engines": {
    "node": ">=0.10"
  },
  "main": "v8-debug",
  "dependencies": {
    "node-pre-gyp": "^0.6.5",
    "nan": "~1.8.4"
  },
  "devDependencies": {
    "aws-sdk": "^2.1.8",
    "mocha": "^2.1.0",
    "chai": "^1.10.0"
  },
  "scripts": {
    "preinstall": " ",
    "install": "node-pre-gyp install --fallback-to-build",
    "test": "mocha --debug"
  },
  "readme": "[![Build Status](https://travis-ci.org/node-inspector/v8-debug.svg?branch=master)](https://travis-ci.org/node-inspector/v8-debug)\n[![Build status](https://ci.appveyor.com/api/projects/status/rb02h15b61xyryhx/branch/master?svg=true)](https://ci.appveyor.com/project/3y3/v8-debug-145/branch/master)\n[![npm version](https://badge.fury.io/js/v8-debug.svg)](http://badge.fury.io/js/v8-debug)\n\n# v8-debug\nProvides extending API for [node](http://github.com/ry/node) internal debugger protocol (based on [v8 debugger protocol](https://code.google.com/p/v8/wiki/DebuggerProtocol))\n\nThis is a part of [node-inspector](http://github.com/node-inspector/node-inspector).\n\n## Installation\n```\nnpm install v8-debug\n```\n## API\n\n| Command | Params | Type | Description |\n| :---: | :---: | :---: | :--- |\n|registerCommand|||*Register new debug processor command, like 'lookup'.* (Alias `register`)|\n||name|**{String}**| *Name of command.*|\n||callback|**{Function}**|*function(request, response) modify your response in this function.*|\n|registerEvent|||*Register new debug processor event, like 'break'.*|\n||name|**{String}**| *Name of command.*|\n|execCommand|||*Call debug processor command like 'lookup'.* (Alias `command`)|\n||name|**{String}**| *Name of command.*|\n||attributes|**{Object}**| *Extra parameters, that passes as command arguments.*|\n||userdata|**{Object}**| *Data than needs to be stored, but can't be serialised before call processor callback.* (Not implemented now)|\n|emitEvent|||*Like `execCommand`*|\n|commandToEvent|||*Convert command response object to default event object with same name*|\n||request|**{Object}**|*Request object created by debugger*|\n||response|**{Object}**|*Response object that needs to be converted*|\n|runInDebugContext|||*Evaluate string or function (stringifyed) in debug context.* (Alias `get`)|\n||script|**{String/Function}**|*String or _clear_ function that needs to be evaluated in debug context *|\n\n## Usage\n\n```js\nvar debug = require('v8-debug');\nvar MakeMirror = debug.get('MakeMirror');\n\n//register 'console' event in v8 debugger protocol\ndebug.registerEvent('console');\n//Now debugger can emit new event 'console'\n\n//register '_lookup' command in v8 debugger protocol\ndebug.registerCommand('_lookup', function(request, response) {\n  //do someting here\n  //and modify response\n  response.body = {};\n});\n\nconsole.log = (function(fn) {\n  return function() {\n    //Call 'console' command. (Emit console event)\n    debug.emitEvent('console', {message: arguments[0]} /*, userdata*/);\n    return fn.apply(console, arguments);\n  }\n} (console.log));\n```\nFor more experience see [protocol documentation](https://github.com/buggerjs/bugger-v8-client/blob/master/PROTOCOL.md)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/node-inspector/v8-debug/issues"
  },
  "_id": "v8-debug@0.4.6",
  "_from": "v8-debug@~0.4.2"
}
